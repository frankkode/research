# Generated by Django 4.2.7 on 2025-07-21 20:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("studies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("multiple_choice", "Multiple Choice"),
                            ("true_false", "True/False"),
                            ("text", "Text Input"),
                            ("scale", "Scale (1-5)"),
                            ("likert", "Likert Scale"),
                            ("ranking", "Ranking"),
                        ],
                        max_length=20,
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                ("is_required", models.BooleanField(default=True)),
                ("points", models.IntegerField(default=1)),
                ("explanation", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="QuestionChoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("choice_text", models.CharField(max_length=500)),
                ("is_correct", models.BooleanField(default=False)),
                ("order", models.IntegerField(default=0)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="choices",
                        to="quizzes.question",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("question", "order")},
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "quiz_type",
                    models.CharField(
                        choices=[("pre", "Pre-Quiz"), ("post", "Post-Quiz")],
                        max_length=10,
                    ),
                ),
                ("time_limit_minutes", models.IntegerField(default=30)),
                ("is_active", models.BooleanField(default=True)),
                ("study_group", models.CharField(blank=True, max_length=10)),
                ("display_order", models.IntegerField(default=0)),
                ("randomize_questions", models.BooleanField(default=False)),
                ("show_results_immediately", models.BooleanField(default=False)),
                ("allow_retakes", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["quiz_type", "display_order"],
            },
        ),
        migrations.CreateModel(
            name="QuizAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("started_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("time_taken_seconds", models.IntegerField(blank=True, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("is_submitted", models.BooleanField(default=False)),
                ("is_timed_out", models.BooleanField(default=False)),
                ("score", models.FloatField(blank=True, null=True)),
                ("max_score", models.FloatField(blank=True, null=True)),
                ("percentage_score", models.FloatField(blank=True, null=True)),
                ("question_order", models.JSONField(default=list)),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="quizzes.quiz",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_attempts",
                        to="studies.studysession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
                "unique_together": {("quiz", "user", "session")},
            },
        ),
        migrations.CreateModel(
            name="QuizAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("total_attempts", models.IntegerField(default=0)),
                ("completed_attempts", models.IntegerField(default=0)),
                ("abandoned_attempts", models.IntegerField(default=0)),
                ("average_score", models.FloatField(default=0.0)),
                ("highest_score", models.FloatField(default=0.0)),
                ("lowest_score", models.FloatField(default=0.0)),
                ("median_score", models.FloatField(default=0.0)),
                ("average_completion_time_seconds", models.FloatField(default=0.0)),
                ("fastest_completion_time_seconds", models.IntegerField(default=0)),
                ("slowest_completion_time_seconds", models.IntegerField(default=0)),
                ("question_statistics", models.JSONField(default=dict)),
                ("group_performance", models.JSONField(default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "quiz",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="quizzes.quiz",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="quizzes.quiz",
            ),
        ),
        migrations.CreateModel(
            name="QuizResponse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text_answer", models.TextField(blank=True)),
                ("numeric_answer", models.FloatField(blank=True, null=True)),
                ("is_correct", models.BooleanField(blank=True, null=True)),
                ("points_earned", models.IntegerField(default=0)),
                (
                    "answered_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("time_to_answer_seconds", models.IntegerField(blank=True, null=True)),
                ("question_viewed_at", models.DateTimeField(blank=True, null=True)),
                ("times_changed", models.IntegerField(default=0)),
                (
                    "attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="quizzes.quizattempt",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="quizzes.question",
                    ),
                ),
                (
                    "selected_choice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quizzes.questionchoice",
                    ),
                ),
            ],
            options={
                "ordering": ["answered_at"],
                "unique_together": {("attempt", "question")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together={("quiz", "order")},
        ),
    ]
